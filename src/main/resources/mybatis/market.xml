<?xml version="1.0" encoding="UTF-8" ?> 
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dongne.market.MarketMapper">
	<select id="list" parameterType="Map" resultType="com.dongne.market.MarketDTO">
                select mId, viewcnt, title, content, id, category, rdate, nickname, fileName, r
                from (
                    select mId, viewcnt, title, content, id, category, rdate, fileName, nickname, rownum r
                    from(
                        select mId, viewcnt, title, content, id, category, rdate, fileName, nickname
                        from market
<!-- 						where category = #{category}                          -->
						order by mId desc
                        )
        <![CDATA[       
                )where r >= #{sno} and r <= #{eno}
        ]]>     
     </select>
     <select id="total" resultType="int" parameterType="Map">
   		 select count(*) from market              
     </select>
     
<!--      <update id="updateFile" parameterType="Map"> -->
<!-- 		update market -->
<!-- 		set filename = #{fname} -->
<!-- 		where mId = #{mId} -->
<!-- 	</update> -->
	
     <insert id="create" parameterType="com.dongne.market.MarketDTO">
		insert into market(mId, viewcnt, title, content, id, category, rdate, nickname, fileName)
		values((select nvl(max(mId), 0) + 1 from market), 0 ,
		#{title}, #{content}, #{id}, #{category}, sysdate, #{nickname}, #{filename})
  	</insert>
  	
  	<update id="upCnt" parameterType="int">
    update market              
    set viewcnt = viewcnt + 1 
    where mid = #{mid}         
    </update>
    
  <select id="read"  parameterType="int" resultType="com.dongne.market.MarketDTO">
    SELECT mId, title, content, id, nickname, viewcnt, rdate, filename
    FROM market
    WHERE mid = #{mid}
  </select>
     
  <update id="update" parameterType="com.dongne.market.MarketDTO" >
		update market
		set title = #{title}, 
		content = #{content},
		nickname = #{nickname},
		filename = #{filename}
		where mid = #{mid}
	</update>
	
	<update id="updateFile" parameterType="Map">
		update market
		set filename = #{filename},
		title = #{title},
		content = #{content}
		where mid = #{mid}
	</update>

	<delete id="delete" parameterType="int">
			delete from market
			where mid = #{mid}
	</delete>   
</mapper>